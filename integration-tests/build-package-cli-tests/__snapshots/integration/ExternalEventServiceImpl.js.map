{"version":3,"file":"ExternalEventServiceImpl.js","sources":["ExternalEventServiceImpl.ts"],"sourcesContent":["// SPDX-FileCopyrightText: 2023 Open Pioneer project (https://github.com/open-pioneer)\n// SPDX-License-Identifier: Apache-2.0\nimport { ApplicationContext, Service, ServiceOptions } from \"@open-pioneer/runtime\";\nimport { ExternalEventService } from \"./api\";\n\ninterface References {\n    ctx: ApplicationContext;\n}\n\nexport class ExternalEventServiceImpl implements Service<ExternalEventService> {\n    #ctx: ApplicationContext;\n\n    constructor({ references }: ServiceOptions<References>) {\n        this.#ctx = references.ctx;\n    }\n\n    emitEvent(name: string, detail?: unknown): void;\n    emitEvent(event: Event): void;\n    emitEvent(nameOrEvent: string | Event, detail: unknown = null) {\n        if (nameOrEvent == null) {\n            return;\n        }\n\n        if (nameOrEvent instanceof Event) {\n            this.#dispatch(nameOrEvent);\n            return;\n        }\n\n        const event = new CustomEvent(nameOrEvent, {\n            bubbles: false,\n            cancelable: false,\n            detail\n        });\n        this.#dispatch(event);\n    }\n\n    #dispatch(event: Event) {\n        this.#ctx.getHostElement().dispatchEvent(event);\n    }\n}\n"],"names":[],"mappings":"AASO,MAAM,wBAAkE,CAAA;AAAA,EAC3E,IAAA;AAAA,EAEA,WAAA,CAAY,EAAE,UAAA,EAA0C,EAAA;AACpD,IAAA,IAAA,CAAK,OAAO,UAAW,CAAA,GAAA;AAAA;AAC3B,EAIA,SAAA,CAAU,WAA6B,EAAA,MAAA,GAAkB,IAAM,EAAA;AAC3D,IAAA,IAAI,eAAe,IAAM,EAAA;AACrB,MAAA;AAAA;AAGJ,IAAA,IAAI,uBAAuB,KAAO,EAAA;AAC9B,MAAA,IAAA,CAAK,UAAU,WAAW,CAAA;AAC1B,MAAA;AAAA;AAGJ,IAAM,MAAA,KAAA,GAAQ,IAAI,WAAA,CAAY,WAAa,EAAA;AAAA,MACvC,OAAS,EAAA,KAAA;AAAA,MACT,UAAY,EAAA,KAAA;AAAA,MACZ;AAAA,KACH,CAAA;AACD,IAAA,IAAA,CAAK,UAAU,KAAK,CAAA;AAAA;AACxB,EAEA,UAAU,KAAc,EAAA;AACpB,IAAA,IAAA,CAAK,IAAK,CAAA,cAAA,EAAiB,CAAA,aAAA,CAAc,KAAK,CAAA;AAAA;AAEtD;;;;"}