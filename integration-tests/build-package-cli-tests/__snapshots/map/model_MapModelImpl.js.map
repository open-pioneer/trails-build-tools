{"version":3,"file":"MapModelImpl.js","sources":["MapModelImpl.ts"],"sourcesContent":["// SPDX-FileCopyrightText: 2023 Open Pioneer project (https://github.com/open-pioneer)\n// SPDX-License-Identifier: Apache-2.0\nimport {\n    EventEmitter,\n    ManualPromise,\n    createAbortError,\n    createLogger,\n    createManualPromise,\n    isAbortError\n} from \"@open-pioneer/core\";\nimport OlMap from \"ol/Map\";\nimport { unByKey } from \"ol/Observable\";\nimport { EventsKey } from \"ol/events\";\nimport { getCenter } from \"ol/extent\";\nimport {\n    ExtentConfig,\n    Highlight,\n    HighlightOptions,\n    HighlightZoomOptions,\n    MapModel,\n    MapModelEvents\n} from \"../api\";\nimport { LayerCollectionImpl } from \"./LayerCollectionImpl\";\nimport { Geometry } from \"ol/geom\";\nimport { Highlights } from \"./Highlights\";\nimport { HttpService } from \"@open-pioneer/http\";\n\nconst LOG = createLogger(\"map:MapModel\");\n\n/**\n * Shared services or other entities propagated from the map model to all layer instances.\n */\nexport interface SharedDependencies {\n    httpService: HttpService;\n}\n\nexport class MapModelImpl extends EventEmitter<MapModelEvents> implements MapModel {\n    readonly #id: string;\n    readonly #olMap: OlMap;\n    readonly #layers = new LayerCollectionImpl(this);\n    readonly #highlights: Highlights;\n    readonly #sharedDeps: SharedDependencies;\n\n    #destroyed = false;\n    #container: HTMLElement | undefined;\n    #initialExtent: ExtentConfig | undefined;\n    #targetWatchKey: EventsKey | undefined;\n\n    readonly #abortController = new AbortController();\n    #displayStatus: \"waiting\" | \"ready\" | \"error\";\n    #displayWaiter: ManualPromise<void> | undefined;\n\n    constructor(properties: {\n        id: string;\n        olMap: OlMap;\n        initialExtent: ExtentConfig | undefined;\n        httpService: HttpService;\n    }) {\n        super();\n        this.#id = properties.id;\n        this.#olMap = properties.olMap;\n        this.#initialExtent = properties.initialExtent;\n        this.#sharedDeps = {\n            httpService: properties.httpService\n        };\n        this.#highlights = new Highlights(this.#olMap);\n\n        this.#displayStatus = \"waiting\";\n        this.#initializeView().then(\n            () => {\n                this.#displayStatus = \"ready\";\n                this.#displayWaiter?.resolve();\n                this.#displayWaiter = undefined;\n            },\n            (error) => {\n                if (!isAbortError(error)) {\n                    LOG.error(`Failed to initialize map`, error);\n                }\n\n                this.#displayStatus = \"error\";\n                this.#displayWaiter?.reject(new Error(`Failed to initialize map.`));\n                this.#displayWaiter = undefined;\n            }\n        );\n        this.#targetWatchKey = this.#olMap.on(\"change:target\", () => {\n            this.#onTargetChanged();\n        });\n    }\n\n    destroy() {\n        if (this.#destroyed) {\n            return;\n        }\n\n        this.#destroyed = true;\n        try {\n            this.emit(\"destroy\");\n        } catch (e) {\n            LOG.warn(`Unexpected error from event listener during map model destruction:`, e);\n        }\n\n        if (this.#targetWatchKey) {\n            unByKey(this.#targetWatchKey);\n        }\n        this.#targetWatchKey = undefined;\n        this.#abortController.abort();\n        this.#displayWaiter?.reject(new Error(\"Map model was destroyed.\"));\n        this.#layers.destroy();\n        this.#highlights.destroy();\n        this.#olMap.dispose();\n    }\n\n    get id(): string {\n        return this.#id;\n    }\n\n    get olMap(): OlMap {\n        return this.#olMap;\n    }\n\n    get layers(): LayerCollectionImpl {\n        return this.#layers;\n    }\n\n    get container(): HTMLElement | undefined {\n        return this.#container;\n    }\n\n    get initialExtent(): ExtentConfig | undefined {\n        return this.#initialExtent;\n    }\n\n    get __sharedDependencies(): SharedDependencies {\n        return this.#sharedDeps;\n    }\n\n    highlight(geometries: Geometry[], options?: HighlightOptions | undefined): Highlight {\n        return this.#highlights.addHighlight(geometries, options);\n    }\n    zoom(geometries: Geometry[], options?: HighlightZoomOptions | undefined): void {\n        this.#highlights.zoomToHighlight(geometries, options);\n    }\n\n    highlightAndZoom(geometries: Geometry[], options?: HighlightZoomOptions): Highlight {\n        return this.#highlights.addHighlightAndZoom(geometries, options ?? {});\n    }\n\n    removeHighlights() {\n        this.#highlights.clearHighlight();\n    }\n\n    whenDisplayed(): Promise<void> {\n        if (this.#destroyed) {\n            return Promise.reject(new Error(\"Map model was destroyed.\"));\n        }\n        if (this.#displayStatus === \"error\") {\n            return Promise.reject(new Error(`Failed to initialize map.`));\n        }\n        if (this.#displayStatus === \"ready\") {\n            return Promise.resolve();\n        }\n        return (this.#displayWaiter ??= createManualPromise()).promise;\n    }\n\n    /**\n     * Waits for the map to be displayed and then initializes the view (if necessary).\n     *\n     * May simply resolve when done, or throw an error when a problem occurs.\n     * AbortError is thrown when cancelled via `this.#abortController`, for example\n     * when the map model is destroyed before it has ever been displayed.\n     */\n    async #initializeView(): Promise<void> {\n        try {\n            await waitForMapSize(this.olMap, this.#abortController.signal); // may throw on cancel\n        } catch (e) {\n            if (isAbortError(e)) {\n                throw e;\n            }\n            throw new Error(`Failed to wait for the map to be displayed.`, { cause: e });\n        }\n\n        try {\n            const olMap = this.#olMap;\n            const view = olMap.getView();\n\n            if (this.#initialExtent) {\n                // Initial extent was set from the outside. We simply ensure that it gets displayed by the map.\n                const extent = this.#initialExtent;\n                const olExtent = [extent.xMin, extent.yMin, extent.xMax, extent.yMax];\n\n                const olCenter = getCenter(olExtent);\n                const resolution = view.getResolutionForExtent(olExtent);\n                LOG.debug(`Applying initial extent`, extent);\n                LOG.debug(`  Computed center:`, olCenter);\n                LOG.debug(`  Computed resolution:`, resolution);\n\n                view.setCenter(olCenter);\n                view.setResolution(resolution);\n            } else {\n                // Initial extent was NOT set from the outside.\n                // We detect whatever the view is displaying and consider it to be the initial extent.\n                const olExtent = view.calculateExtent();\n                const [xMin = 0, yMin = 0, xMax = 0, yMax = 0] = olExtent;\n                const extent: ExtentConfig = { xMin, yMin, xMax, yMax };\n                LOG.debug(`Detected initial extent`, extent);\n\n                this.#initialExtent = extent;\n                this.emit(\"changed:initialExtent\");\n                this.emit(\"changed\");\n            }\n        } catch (e) {\n            throw new Error(`Failed to apply the initial extent.`, { cause: e });\n        }\n    }\n\n    #onTargetChanged() {\n        const newContainer: HTMLElement | undefined = this.#olMap.getTargetElement() ?? undefined;\n        if (this.#container !== newContainer) {\n            this.#container = newContainer;\n            this.emit(\"changed:container\");\n            this.emit(\"changed\");\n        }\n    }\n}\n\nfunction waitForMapSize(olMap: OlMap, signal: AbortSignal): Promise<void> {\n    const promise = new Promise<void>((resolve, reject) => {\n        let eventKey: EventsKey | undefined;\n\n        function checkSize() {\n            const currentSize = olMap.getSize() ?? [];\n            const [width = 0, height = 0] = currentSize;\n            if (currentSize && width > 0 && height > 0) {\n                finish();\n            }\n        }\n\n        function onAbort() {\n            finish(createAbortError());\n        }\n\n        function finish(error?: Error | undefined) {\n            if (eventKey) {\n                unByKey(eventKey);\n                eventKey = undefined;\n            }\n            signal.removeEventListener(\"abort\", onAbort);\n\n            if (error) {\n                reject(error);\n            } else {\n                resolve(wait(25)); // Give the map some time to render\n            }\n        }\n\n        if (signal.aborted) {\n            finish(createAbortError());\n            return;\n        }\n\n        signal.addEventListener(\"abort\", onAbort);\n        eventKey = olMap.on(\"change:size\", checkSize);\n    });\n    return promise;\n}\n\nfunction wait(milliseconds: number): Promise<void> {\n    return new Promise((resolve) => setTimeout(resolve, milliseconds));\n}\n"],"names":[],"mappings":"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"}