{"version":3,"file":"MapModelImpl.js","sources":["MapModelImpl.ts"],"sourcesContent":["// SPDX-FileCopyrightText: 2023 Open Pioneer project (https://github.com/open-pioneer)\n// SPDX-License-Identifier: Apache-2.0\nimport {\n    EventEmitter,\n    ManualPromise,\n    createAbortError,\n    createLogger,\n    createManualPromise,\n    isAbortError\n} from \"@open-pioneer/core\";\nimport OlMap from \"ol/Map\";\nimport { unByKey } from \"ol/Observable\";\nimport { EventsKey } from \"ol/events\";\nimport { getCenter } from \"ol/extent\";\nimport {\n    ExtentConfig,\n    Highlight,\n    HighlightOptions,\n    HighlightZoomOptions,\n    MapModel,\n    MapModelEvents\n} from \"../api\";\nimport { LayerCollectionImpl } from \"./LayerCollectionImpl\";\nimport { Geometry } from \"ol/geom\";\nimport { Highlights } from \"./Highlights\";\nimport { HttpService } from \"@open-pioneer/http\";\n\nconst LOG = createLogger(\"map:MapModel\");\n\n/**\n * Shared services or other entities propagated from the map model to all layer instances.\n */\nexport interface SharedDependencies {\n    httpService: HttpService;\n}\n\nexport class MapModelImpl extends EventEmitter<MapModelEvents> implements MapModel {\n    readonly #id: string;\n    readonly #olMap: OlMap;\n    readonly #layers = new LayerCollectionImpl(this);\n    readonly #highlights: Highlights;\n    readonly #sharedDeps: SharedDependencies;\n\n    #destroyed = false;\n    #container: HTMLElement | undefined;\n    #initialExtent: ExtentConfig | undefined;\n    #targetWatchKey: EventsKey | undefined;\n\n    readonly #abortController = new AbortController();\n    #displayStatus: \"waiting\" | \"ready\" | \"error\";\n    #displayWaiter: ManualPromise<void> | undefined;\n\n    constructor(properties: {\n        id: string;\n        olMap: OlMap;\n        initialExtent: ExtentConfig | undefined;\n        httpService: HttpService;\n    }) {\n        super();\n        this.#id = properties.id;\n        this.#olMap = properties.olMap;\n        this.#initialExtent = properties.initialExtent;\n        this.#sharedDeps = {\n            httpService: properties.httpService\n        };\n        this.#highlights = new Highlights(this.#olMap);\n\n        this.#displayStatus = \"waiting\";\n        this.#initializeView().then(\n            () => {\n                this.#displayStatus = \"ready\";\n                this.#displayWaiter?.resolve();\n                this.#displayWaiter = undefined;\n            },\n            (error) => {\n                if (!isAbortError(error)) {\n                    LOG.error(`Failed to initialize map`, error);\n                }\n\n                this.#displayStatus = \"error\";\n                this.#displayWaiter?.reject(new Error(`Failed to initialize map.`));\n                this.#displayWaiter = undefined;\n            }\n        );\n        this.#targetWatchKey = this.#olMap.on(\"change:target\", () => {\n            this.#onTargetChanged();\n        });\n    }\n\n    destroy() {\n        if (this.#destroyed) {\n            return;\n        }\n\n        this.#destroyed = true;\n        try {\n            this.emit(\"destroy\");\n        } catch (e) {\n            LOG.warn(`Unexpected error from event listener during map model destruction:`, e);\n        }\n\n        if (this.#targetWatchKey) {\n            unByKey(this.#targetWatchKey);\n        }\n        this.#targetWatchKey = undefined;\n        this.#abortController.abort();\n        this.#displayWaiter?.reject(new Error(\"Map model was destroyed.\"));\n        this.#layers.destroy();\n        this.#highlights.destroy();\n        this.#olMap.dispose();\n    }\n\n    get id(): string {\n        return this.#id;\n    }\n\n    get olMap(): OlMap {\n        return this.#olMap;\n    }\n\n    get layers(): LayerCollectionImpl {\n        return this.#layers;\n    }\n\n    get container(): HTMLElement | undefined {\n        return this.#container;\n    }\n\n    get initialExtent(): ExtentConfig | undefined {\n        return this.#initialExtent;\n    }\n\n    get __sharedDependencies(): SharedDependencies {\n        return this.#sharedDeps;\n    }\n\n    highlight(geometries: Geometry[], options?: HighlightOptions | undefined): Highlight {\n        return this.#highlights.addHighlight(geometries, options);\n    }\n    zoom(geometries: Geometry[], options?: HighlightZoomOptions | undefined): void {\n        this.#highlights.zoomToHighlight(geometries, options);\n    }\n\n    highlightAndZoom(geometries: Geometry[], options?: HighlightZoomOptions) {\n        return this.#highlights.addHighlightAndZoom(geometries, options ?? {});\n    }\n\n    removeHighlights() {\n        this.#highlights.clearHighlight();\n    }\n\n    whenDisplayed(): Promise<void> {\n        if (this.#destroyed) {\n            return Promise.reject(new Error(\"Map model was destroyed.\"));\n        }\n        if (this.#displayStatus === \"error\") {\n            return Promise.reject(new Error(`Failed to initialize map.`));\n        }\n        if (this.#displayStatus === \"ready\") {\n            return Promise.resolve();\n        }\n        return (this.#displayWaiter ??= createManualPromise()).promise;\n    }\n\n    /**\n     * Waits for the map to be displayed and then initializes the view (if necessary).\n     *\n     * May simply resolve when done, or throw an error when a problem occurs.\n     * AbortError is thrown when cancelled via `this.#abortController`, for example\n     * when the map model is destroyed before it has ever been displayed.\n     */\n    async #initializeView(): Promise<void> {\n        try {\n            await waitForMapSize(this.olMap, this.#abortController.signal); // may throw on cancel\n        } catch (e) {\n            if (isAbortError(e)) {\n                throw e;\n            }\n            throw new Error(`Failed to wait for the map to be displayed.`, { cause: e });\n        }\n\n        try {\n            const olMap = this.#olMap;\n            const view = olMap.getView();\n\n            if (this.#initialExtent) {\n                // Initial extent was set from the outside. We simply ensure that it gets displayed by the map.\n                const extent = this.#initialExtent;\n                const olExtent = [extent.xMin, extent.yMin, extent.xMax, extent.yMax];\n\n                const olCenter = getCenter(olExtent);\n                const resolution = view.getResolutionForExtent(olExtent);\n                LOG.debug(`Applying initial extent`, extent);\n                LOG.debug(`  Computed center:`, olCenter);\n                LOG.debug(`  Computed resolution:`, resolution);\n\n                view.setCenter(olCenter);\n                view.setResolution(resolution);\n            } else {\n                // Initial extent was NOT set from the outside.\n                // We detect whatever the view is displaying and consider it to be the initial extent.\n                const olExtent = view.calculateExtent();\n                const [xMin = 0, yMin = 0, xMax = 0, yMax = 0] = olExtent;\n                const extent: ExtentConfig = { xMin, yMin, xMax, yMax };\n                LOG.debug(`Detected initial extent`, extent);\n\n                this.#initialExtent = extent;\n                this.emit(\"changed:initialExtent\");\n                this.emit(\"changed\");\n            }\n        } catch (e) {\n            throw new Error(`Failed to apply the initial extent.`, { cause: e });\n        }\n    }\n\n    #onTargetChanged() {\n        const newContainer: HTMLElement | undefined = this.#olMap.getTargetElement() ?? undefined;\n        if (this.#container !== newContainer) {\n            this.#container = newContainer;\n            this.emit(\"changed:container\");\n            this.emit(\"changed\");\n        }\n    }\n}\n\nfunction waitForMapSize(olMap: OlMap, signal: AbortSignal): Promise<void> {\n    const promise = new Promise<void>((resolve, reject) => {\n        let eventKey: EventsKey | undefined;\n\n        function checkSize() {\n            const currentSize = olMap.getSize() ?? [];\n            const [width = 0, height = 0] = currentSize;\n            if (currentSize && width > 0 && height > 0) {\n                finish();\n            }\n        }\n\n        function onAbort() {\n            finish(createAbortError());\n        }\n\n        function finish(error?: Error | undefined) {\n            if (eventKey) {\n                unByKey(eventKey);\n                eventKey = undefined;\n            }\n            signal.removeEventListener(\"abort\", onAbort);\n\n            if (error) {\n                reject(error);\n            } else {\n                resolve(wait(25)); // Give the map some time to render\n            }\n        }\n\n        if (signal.aborted) {\n            finish(createAbortError());\n            return;\n        }\n\n        signal.addEventListener(\"abort\", onAbort);\n        eventKey = olMap.on(\"change:size\", checkSize);\n    });\n    return promise;\n}\n\nfunction wait(milliseconds: number): Promise<void> {\n    return new Promise((resolve) => setTimeout(resolve, milliseconds));\n}\n"],"names":[],"mappings":"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"}