{"version":3,"file":"defer.js","sources":["defer.ts"],"sourcesContent":["// SPDX-FileCopyrightText: 2023 Open Pioneer project (https://github.com/open-pioneer)\n// SPDX-License-Identifier: Apache-2.0\nexport interface DeferredExecution {\n    /**\n     * Re-schedule execution of `func` (if it was not already executed).\n     * Returns true on success, false otherwise.\n     */\n    reschedule(): boolean;\n\n    /**\n     * Cancels the pending execution (if it is still pending).\n     */\n    cancel(): void;\n}\n\n/**\n * Calls `func` at a slightly later time.\n *\n * The returned object can be used to re-schedule or cancel the execution of `func`.\n * However, `func` will be executed at most once.\n */\nexport function defer(func: () => void): DeferredExecution {\n    let executed = false;\n    let timeout: ReturnType<typeof setTimeout> | undefined = setTimeout(() => {\n        executed = true;\n        timeout = undefined;\n        func();\n    });\n    return {\n        reschedule() {\n            // Do nothing: if not executed, the timeout is still pending\n            // and it will run in the future.\n            return !executed;\n        },\n        cancel() {\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n        }\n    };\n}\n"],"names":[],"mappings":"AAqBO,SAAS,MAAM,IAAqC,EAAA;AACvD,EAAA,IAAI,QAAW,GAAA,KAAA,CAAA;AACf,EAAI,IAAA,OAAA,GAAqD,WAAW,MAAM;AACtE,IAAW,QAAA,GAAA,IAAA,CAAA;AACX,IAAU,OAAA,GAAA,KAAA,CAAA,CAAA;AACV,IAAK,IAAA,EAAA,CAAA;AAAA,GACR,CAAA,CAAA;AACD,EAAO,OAAA;AAAA,IACH,UAAa,GAAA;AAGT,MAAA,OAAO,CAAC,QAAA,CAAA;AAAA,KACZ;AAAA,IACA,MAAS,GAAA;AACL,MAAA,IAAI,OAAS,EAAA;AACT,QAAA,YAAA,CAAa,OAAO,CAAA,CAAA;AAAA,OACxB;AAAA,KACJ;AAAA,GACJ,CAAA;AACJ;;;;"}