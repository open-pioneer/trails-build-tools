{"version":3,"file":"AbstractLayerBase.js","sources":["AbstractLayerBase.ts"],"sourcesContent":["// SPDX-FileCopyrightText: 2023 Open Pioneer project (https://github.com/open-pioneer)\n// SPDX-License-Identifier: Apache-2.0\nimport { EventEmitter, EventNames, createLogger } from \"@open-pioneer/core\";\nimport { v4 as uuid4v } from \"uuid\";\nimport { LayerBase, LayerBaseEvents, Sublayer } from \"../api\";\nimport { MapModelImpl } from \"./MapModelImpl\";\nimport { SublayersCollectionImpl } from \"./SublayersCollectionImpl\";\n\nconst LOG = createLogger(\"map:AbstractLayerModel\");\n\nexport interface AbstractLayerBaseOptions {\n    id?: string;\n    title: string;\n    description?: string;\n    attributes?: Record<string, unknown>;\n}\n\n/**\n * Base class for \"normal\" layers and sublayers alike to implement common properties\n * such as id, title and attributes.\n */\nexport abstract class AbstractLayerBase<AdditionalEvents = {}>\n    extends EventEmitter<LayerBaseEvents & AdditionalEvents>\n    implements LayerBase\n{\n    #map: MapModelImpl | undefined;\n\n    #id: string;\n    #title: string;\n    #description: string;\n    #attributes: Record<string | symbol, unknown>;\n    #destroyed = false;\n\n    constructor(config: AbstractLayerBaseOptions) {\n        super();\n        this.#id = config.id ?? uuid4v();\n        this.#attributes = config.attributes ?? {};\n        this.#title = config.title;\n        this.#description = config.description ?? \"\";\n    }\n\n    protected get __destroyed(): boolean {\n        return this.#destroyed;\n    }\n\n    get map(): MapModelImpl {\n        const map = this.#map;\n        if (!map) {\n            throw new Error(`Layer '${this.id}' has not been attached to a map yet.`);\n        }\n        return map;\n    }\n\n    get id(): string {\n        return this.#id;\n    }\n\n    get title(): string {\n        return this.#title;\n    }\n\n    get description(): string {\n        return this.#description;\n    }\n\n    get attributes(): Record<string | symbol, unknown> {\n        return this.#attributes;\n    }\n\n    abstract get visible(): boolean;\n\n    abstract get sublayers(): SublayersCollectionImpl<Sublayer & AbstractLayerBase> | undefined;\n\n    abstract get legend(): string | undefined;\n\n    destroy() {\n        if (this.#destroyed) {\n            return;\n        }\n\n        this.#destroyed = true;\n        this.sublayers?.destroy();\n        try {\n            this.emit(\"destroy\");\n        } catch (e) {\n            LOG.warn(`Unexpected error from event listener during layer destruction:`, e);\n        }\n    }\n\n    /**\n     * Attaches the layer to its owning map.\n     */\n    protected __attachToMap(map: MapModelImpl): void {\n        if (this.#map) {\n            throw new Error(\n                `Layer '${this.id}' has already been attached to the map '${this.map.id}'`\n            );\n        }\n        this.#map = map;\n    }\n\n    setTitle(newTitle: string): void {\n        if (newTitle !== this.#title) {\n            this.#title = newTitle;\n            this.__emitChangeEvent(\"changed:title\");\n        }\n    }\n\n    setDescription(newDescription: string): void {\n        if (newDescription !== this.#description) {\n            this.#description = newDescription;\n            this.__emitChangeEvent(\"changed:description\");\n        }\n    }\n\n    updateAttributes(newAttributes: Record<string | symbol, unknown>): void {\n        const attributes = this.#attributes;\n        const keys = Reflect.ownKeys(newAttributes);\n\n        let changed = false;\n        for (const key of keys) {\n            const existing = attributes[key];\n            const value = newAttributes[key];\n            if (existing !== value) {\n                attributes[key] = value;\n                changed = true;\n            }\n        }\n\n        if (changed) {\n            this.__emitChangeEvent(\"changed:attributes\");\n        }\n    }\n\n    deleteAttribute(deleteAttribute: string | symbol): void {\n        const attributes = this.#attributes;\n        if (attributes[deleteAttribute]) {\n            delete attributes[deleteAttribute];\n            this.__emitChangeEvent(\"changed:attributes\");\n        }\n    }\n\n    abstract setVisible(newVisibility: boolean): void;\n\n    protected __emitChangeEvent<Name extends EventNames<LayerBaseEvents & AdditionalEvents>>(\n        event: Name\n    ) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (this as any).emit(event);\n        this.emit(\"changed\");\n    }\n}\n"],"names":["uuid4v"],"mappings":"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"}