{"version":3,"file":"Highlights.js","sources":["Highlights.ts"],"sourcesContent":["// SPDX-FileCopyrightText: 2023 Open Pioneer project (https://github.com/open-pioneer)\n// SPDX-License-Identifier: Apache-2.0\n\nimport { Feature } from \"ol\";\nimport OlMap from \"ol/Map\";\nimport { Coordinate } from \"ol/coordinate\";\nimport { Extent, createEmpty, extend, getArea, getCenter } from \"ol/extent\";\nimport { Geometry } from \"ol/geom\";\nimport VectorLayer from \"ol/layer/Vector\";\nimport VectorSource from \"ol/source/Vector\";\nimport { Fill, Icon, Stroke, Style } from \"ol/style\";\nimport { toFunction as toStyleFunction } from \"ol/style/Style\";\nimport {\n    DisplayTarget,\n    Highlight,\n    HighlightOptions,\n    HighlightStyle,\n    HighlightZoomOptions,\n    ZoomOptions\n} from \"../api/MapModel\";\nimport mapMarkerUrl from \"../assets/images/mapMarker.png?url\";\nimport { FeatureLike } from \"ol/Feature\";\nimport { TOPMOST_LAYER_Z } from \"../api\";\nimport { Type } from \"ol/geom/Geometry\";\n\ntype HighlightStyleType = keyof HighlightStyle;\n\nconst DEFAULT_OL_POINT_ZOOM_LEVEL = 17;\nconst DEFAULT_OL_MAX_ZOOM_LEVEL = 20;\nconst DEFAULT_VIEW_PADDING = { top: 50, right: 20, bottom: 10, left: 20 };\n\nexport class Highlights {\n    private olMap: OlMap;\n\n    private olLayer: VectorLayer<Feature<Geometry>>;\n    private olSource: VectorSource<Feature<Geometry>>;\n    private activeHighlights: Set<Highlight>;\n\n    constructor(olMap: OlMap) {\n        this.olMap = olMap;\n        this.olSource = new VectorSource({\n            features: undefined\n        });\n        this.olLayer = new VectorLayer({\n            className: \"highlight-layer\",\n            source: this.olSource,\n            style: function (feature, resolution) {\n                return resolveStyle(feature, resolution);\n            }\n        });\n        this.activeHighlights = new Set();\n        this.olLayer.setZIndex(TOPMOST_LAYER_Z);\n        this.olMap.addLayer(this.olLayer);\n    }\n\n    /**\n     * Getter for Hightlightlayer\n     * @returns Highlights.olLayer\n     */\n    getLayer() {\n        return this.olLayer;\n    }\n\n    /**\n     * This method removes all highlights before destroying the class\n     */\n    destroy() {\n        this.clearHighlight();\n    }\n\n    /**\n     * Method of filtering out objects that are not geometry or have no property geometry.\n     */\n    #filterGeoobjects(geoObjects: DisplayTarget[]): Geometry[] {\n        const geometries: Geometry[] = [];\n        geoObjects.forEach((item) => {\n            if (\"getType\" in item) geometries.push(item);\n            if (\"geometry\" in item && item.geometry) geometries.push(item.geometry);\n        });\n        return geometries;\n    }\n\n    /**\n     * This method displays geometries or BaseFeatures with optional styling in the map\n     */\n    addHighlight(displayTarget: DisplayTarget[], highlightOptions: HighlightOptions | undefined): Highlight {\n        const geometries = this.#filterGeoobjects(displayTarget);\n\n        if (geometries.length === 0) {\n            return {\n                get isActive() {\n                    return false;\n                },\n                destroy() {}\n            };\n        }\n\n        const features = geometries.map((geometry) => {\n            const type = geometry.getType();\n            const feature = new Feature({\n                type: type,\n                geometry: geometry\n            });\n            feature.setStyle(getOwnStyle(type, highlightOptions?.highlightStyle));\n            return feature;\n        });\n\n        const source = this.olSource;\n        const highlights = this.activeHighlights;\n        const highlight: Highlight = {\n            get isActive() {\n                return highlights.has(highlight);\n            },\n            destroy() {\n                if (!this.isActive) {\n                    return;\n                }\n\n                for (const feature of features) {\n                    source.removeFeature(feature);\n                }\n                highlights.delete(highlight);\n            }\n        };\n\n        source.addFeatures(features);\n        this.activeHighlights.add(highlight);\n        return highlight;\n    }\n\n    /**\n     * This method zoom to geometries or BaseFeatures\n     */\n    zoomToHighlight(displayTarget: DisplayTarget[], options: ZoomOptions | undefined) {\n        const geometries = this.#filterGeoobjects(displayTarget);\n\n        if (geometries.length === 0) {\n            return;\n        }\n\n        let extent = createEmpty();\n        for (const geometry of geometries) {\n            extent = extend(extent, geometry!.getExtent());\n        }\n\n        const center = getCenter(extent);\n        const isPoint = getArea(extent) === 0;\n        const zoomScale = isPoint\n            ? options?.pointZoom ?? DEFAULT_OL_POINT_ZOOM_LEVEL\n            : options?.maxZoom ?? DEFAULT_OL_MAX_ZOOM_LEVEL;\n        setCenter(this.olMap, center);\n\n        const {\n            top = 0,\n            right = 0,\n            bottom = 0,\n            left = 0\n        } = options?.viewPadding ?? DEFAULT_VIEW_PADDING;\n        const padding = [top, right, bottom, left];\n        zoomTo(this.olMap, extent, zoomScale, padding);\n    }\n\n    /**\n     * This method displays geometries or BaseFeatures with optional styling in the map and executed a zoom\n     */\n    addHighlightAndZoom(\n        displayTarget: DisplayTarget[],\n        highlightZoomStyle: HighlightZoomOptions | undefined\n    ): Highlight {\n        const result = this.addHighlight(displayTarget, highlightZoomStyle);\n        this.zoomToHighlight(displayTarget, highlightZoomStyle);\n        return result;\n    }\n\n    clearHighlight() {\n        for (const highlight of this.activeHighlights) {\n            highlight.destroy();\n        }\n    }\n}\n\nfunction setCenter(olMap: OlMap, coordinates: Coordinate | undefined) {\n    coordinates && coordinates.length && olMap.getView().setCenter(coordinates);\n}\n\nfunction zoomTo(\n    olMap: OlMap,\n    extent: Extent | undefined,\n    zoomLevel: number | undefined,\n    padding: number[]\n) {\n    if (extent) {\n        olMap.getView().fit(extent, { maxZoom: zoomLevel, padding: padding });\n    } else {\n        zoomLevel && olMap.getView().setZoom(zoomLevel);\n    }\n}\n\n/**\n * Returns the appropriate style from the user's highlightStyle or falls back to the default style\n */\nfunction resolveStyle(feature: FeatureLike, resolution: number) {\n    const type: keyof typeof defaultHighlightStyle = feature.get(\"type\");\n    const style = toStyleFunction(getDefaultStyle(type));\n    return style(feature, resolution);\n}\n\n/**\n * This method creates styling for a highlight based on the optional style information or the default style\n */\nfunction getOwnStyle(type: Type, highlightStyle: HighlightStyle | undefined) {\n    if (highlightStyle && type in highlightStyle) {\n        const supportedType = type as HighlightStyleType;\n        const ownStyle = highlightStyle[supportedType];\n        return ownStyle ? ownStyle : getDefaultStyle(type);\n    } else {\n        return getDefaultStyle(type);\n    }\n}\n\n/**\n * This returns default styling for a highlight\n */\nfunction getDefaultStyle(type: Type) {\n    if (type in defaultHighlightStyle) {\n        const supportedType = type as HighlightStyleType;\n        return defaultHighlightStyle[supportedType];\n    } else {\n        return defaultHighlightStyle.Polygon;\n    }\n}\n\n/**\n * Default styling for highlights\n */\nconst defaultHighlightStyle = {\n    \"Point\": new Style({\n        image: new Icon({\n            anchor: [0.5, 1],\n            src: mapMarkerUrl\n        })\n    }),\n    \"MultiPoint\": new Style({\n        image: new Icon({\n            anchor: [0.5, 1],\n            src: mapMarkerUrl\n        })\n    }),\n    \"LineString\": [\n        new Style({\n            stroke: new Stroke({\n                color: \"#fff\",\n                width: 5\n            })\n        }),\n        new Style({\n            stroke: new Stroke({\n                color: \"#00ffff\",\n                width: 3\n            })\n        })\n    ],\n    \"MultiLineString\": [\n        new Style({\n            stroke: new Stroke({\n                color: \"#fff\",\n                width: 5\n            })\n        }),\n        new Style({\n            stroke: new Stroke({\n                color: \"#00ffff\",\n                width: 3\n            })\n        })\n    ],\n    \"Polygon\": [\n        new Style({\n            stroke: new Stroke({\n                color: \"#fff\",\n                width: 5\n            })\n        }),\n        new Style({\n            stroke: new Stroke({\n                color: \"#00ffff\",\n                width: 3\n            }),\n            fill: new Fill({\n                color: \"rgba(224,255,255,0.35)\"\n            })\n        })\n    ],\n    \"MultiPolygon\": [\n        new Style({\n            stroke: new Stroke({\n                color: \"#fff\",\n                width: 5\n            })\n        }),\n        new Style({\n            stroke: new Stroke({\n                color: \"#00ffff\",\n                width: 3\n            }),\n            fill: new Fill({\n                color: \"rgba(224,255,255,0.35)\"\n            })\n        })\n    ]\n};\n"],"names":["toStyleFunction"],"mappings":"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"}