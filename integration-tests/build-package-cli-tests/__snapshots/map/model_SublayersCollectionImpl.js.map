{"version":3,"file":"SublayersCollectionImpl.js","sources":["SublayersCollectionImpl.ts"],"sourcesContent":["// SPDX-FileCopyrightText: 2023 Open Pioneer project (https://github.com/open-pioneer)\n// SPDX-License-Identifier: Apache-2.0\nimport { EventEmitter } from \"@open-pioneer/core\";\nimport {\n    LayerRetrievalOptions,\n    Sublayer as SublayerInterface,\n    SublayersCollection,\n    SublayersCollectionEvents\n} from \"../api\";\nimport { AbstractLayerBase } from \"./AbstractLayerBase\";\n\n// NOTE: adding / removing sublayers currently not supported\nexport class SublayersCollectionImpl<Sublayer extends SublayerInterface & AbstractLayerBase>\n    extends EventEmitter<SublayersCollectionEvents>\n    implements SublayersCollection\n{\n    #sublayers: Sublayer[];\n\n    constructor(sublayers: Sublayer[]) {\n        super();\n        this.#sublayers = sublayers;\n    }\n\n    destroy() {\n        for (const layer of this.#sublayers) {\n            layer.destroy();\n        }\n        this.#sublayers = [];\n    }\n\n    getSublayers(_options?: LayerRetrievalOptions | undefined): Sublayer[] {\n        // NOTE: options are ignored because layers are always ordered at this time.\n        return this.#sublayers.slice();\n    }\n\n    /**\n     * Returns a reference to the internal sublayers array.\n     *\n     * NOTE: Do not modify directly!\n     */\n    __getRawSublayers(): Sublayer[] {\n        return this.#sublayers;\n    }\n}\n"],"names":[],"mappings":";;AAYO,MAAM,gCACD,YAAA,CAEZ;AAAA,EACI,UAAA;AAAA,EAEA,YAAY,SAAA,EAAuB;AAC/B,IAAA,KAAA,EAAM;AACN,IAAA,IAAA,CAAK,UAAA,GAAa,SAAA;AAAA,EACtB;AAAA,EAEA,OAAA,GAAU;AACN,IAAA,KAAA,MAAW,KAAA,IAAS,KAAK,UAAA,EAAY;AACjC,MAAA,KAAA,CAAM,OAAA,EAAQ;AAAA,IAClB;AACA,IAAA,IAAA,CAAK,aAAa,EAAC;AAAA,EACvB;AAAA,EAEA,aAAa,QAAA,EAA0D;AAEnE,IAAA,OAAO,IAAA,CAAK,WAAW,KAAA,EAAM;AAAA,EACjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,iBAAA,GAAgC;AAC5B,IAAA,OAAO,IAAA,CAAK,UAAA;AAAA,EAChB;AACJ;;;;"}