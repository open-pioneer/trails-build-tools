{"version":3,"file":"CustomComponents.js","sources":["CustomComponents.tsx"],"sourcesContent":["// SPDX-FileCopyrightText: 2023 Open Pioneer project (https://github.com/open-pioneer)\n// SPDX-License-Identifier: Apache-2.0\nimport { SearchIcon } from \"@chakra-ui/icons\";\nimport { CloseButton, chakra } from \"@open-pioneer/chakra-integration\";\nimport {\n    ClearIndicatorProps,\n    IndicatorsContainerProps,\n    InputProps,\n    MenuProps,\n    NoticeProps,\n    OptionProps,\n    Props as SelectProps,\n    SingleValueProps,\n    ValueContainerProps,\n    chakraComponents\n} from \"chakra-react-select\";\nimport classNames from \"classnames\";\nimport { useIntl } from \"open-pioneer:react-hooks\";\nimport { UIEvent } from \"react\";\nimport { SearchGroupOption, SearchOption } from \"./Search\";\n\nexport function MenuComp(props: MenuProps<SearchOption, false, SearchGroupOption>) {\n    const hasInput = props.selectProps.inputValue.length > 0;\n    const menuProps: typeof props = {\n        ...props,\n        className: classNames(props.className, {\n            \"search-invisible\": !hasInput\n        })\n    };\n\n    return <chakraComponents.Menu {...menuProps}>{props.children}</chakraComponents.Menu>;\n}\n\nexport function NoOptionsMessage(props: NoticeProps<SearchOption, false, SearchGroupOption>) {\n    const intl = useIntl();\n    const noMessageText = intl.formatMessage({ id: \"noOptionsText\" });\n\n    return (\n        <chakraComponents.NoOptionsMessage {...props}>\n            <chakra.span className=\"search-no-match\">{noMessageText}</chakra.span>\n        </chakraComponents.NoOptionsMessage>\n    );\n}\n\nexport function LoadingMessage(props: NoticeProps<SearchOption, false, SearchGroupOption>) {\n    const intl = useIntl();\n    const loadingText = intl.formatMessage({ id: \"loadingText\" });\n\n    return (\n        <chakraComponents.LoadingMessage {...props}>\n            <chakra.span className=\"search-loading-text\">{loadingText}</chakra.span>\n        </chakraComponents.LoadingMessage>\n    );\n}\n\nexport function ValueContainer({\n    children,\n    ...props\n}: ValueContainerProps<SearchOption, false, SearchGroupOption>) {\n    const containerProps: typeof props = {\n        ...props,\n        className: classNames(props.className, \"search-value-container\")\n    };\n    return (\n        <chakraComponents.ValueContainer {...containerProps}>\n            {!!children && <SearchIcon style={{ position: \"absolute\", left: 8 }}></SearchIcon>}\n            {children}\n        </chakraComponents.ValueContainer>\n    );\n}\n\nexport function Input(props: InputProps<SearchOption, false, SearchGroupOption>) {\n    const inputProps: typeof props = {\n        ...props,\n        isHidden: false\n    };\n    return <chakraComponents.Input {...inputProps} />;\n}\n\nexport function SingleValue(_props: SingleValueProps<SearchOption, false, SearchGroupOption>) {\n    // Never render anything (we use the text input to show the selected result)\n    return null;\n}\n\nexport function IndicatorsContainer(\n    props: IndicatorsContainerProps<SearchOption, false, SearchGroupOption>\n) {\n    return (\n        <chakraComponents.IndicatorsContainer {...props}>\n            {props.children}\n            {!props.selectProps.isLoading && props.selectProps.inputValue && (\n                <CustomClearIndicator\n                    selectProps={props.selectProps}\n                    clearValue={props.clearValue}\n                />\n            )}\n        </chakraComponents.IndicatorsContainer>\n    );\n}\n\nfunction CustomClearIndicator(props: {\n    clearValue(): void;\n    selectProps: SelectProps<SearchOption, false, SearchGroupOption>;\n}) {\n    const intl = useIntl();\n    const clearButtonLabel = intl.formatMessage({\n        id: \"ariaLabel.clearButton\"\n    });\n    const clickHandler = (e: UIEvent) => {\n        e.preventDefault();\n        e.stopPropagation();\n        props.clearValue();\n    };\n\n    return (\n        <CloseButton\n            role=\"button\"\n            size=\"md\"\n            mr={1}\n            aria-label={clearButtonLabel}\n            onClick={clickHandler}\n            // needed for correct touch handling; select control would otherwise preventDefault()\n            onTouchEnd={clickHandler}\n            // Stop select component from opening the menu.\n            // It will otherwise flash briefly because of a mouse down listener in the select.\n            onMouseDown={(e) => e.preventDefault()}\n        />\n    );\n}\n\nexport function ClearIndicator(\n    _props: ClearIndicatorProps<SearchOption, false, SearchGroupOption>\n) {\n    // Never render anything; we use our own clear indicator\n    return null;\n}\n\nexport function HighlightOption(props: OptionProps<SearchOption, false, SearchGroupOption>) {\n    const userInput = props.selectProps.inputValue;\n    const label = props.data.label;\n    const optionProps: typeof props = {\n        ...props,\n        className: classNames(props.className, \"search-option\")\n    };\n    return (\n        <chakraComponents.Option {...optionProps}>\n            <chakra.div className=\"search-option-label\">\n                {userInput.trim().length > 0 ? getHighlightedLabel(label, userInput) : label}\n            </chakra.div>\n        </chakraComponents.Option>\n    );\n}\n\nfunction getHighlightedLabel(label: string, userInput: string) {\n    const matchIndex = label.toLowerCase().indexOf(userInput.toLowerCase());\n    if (matchIndex >= 0) {\n        return (\n            <>\n                {label.substring(0, matchIndex)}\n                <chakra.span key=\"highlighted\" className=\"search-highlighted-match\">\n                    {label.substring(matchIndex, matchIndex + userInput.length)}\n                </chakra.span>\n                {label.substring(matchIndex + userInput.length)}\n            </>\n        );\n    }\n    return label;\n}\n"],"names":[],"mappings":"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"}