{"version":3,"file":"AbstractLayerBase.js","sources":["AbstractLayerBase.ts"],"sourcesContent":["// SPDX-FileCopyrightText: 2023 Open Pioneer project (https://github.com/open-pioneer)\n// SPDX-License-Identifier: Apache-2.0\nimport { EventEmitter, EventNames, createLogger } from \"@open-pioneer/core\";\nimport { v4 as uuid4v } from \"uuid\";\nimport { LayerBase, LayerBaseEvents, MapModel, Sublayer } from \"../api\";\nimport { MapModelImpl } from \"./MapModelImpl\";\nimport { SublayersCollectionImpl } from \"./SublayersCollectionImpl\";\n\nconst LOG = createLogger(\"map:AbstractLayerModel\");\n\nexport interface AbstractLayerBaseOptions {\n    id?: string;\n    title: string;\n    description?: string;\n    attributes?: Record<string, unknown>;\n}\n\n/**\n * Base class for \"normal\" layers and sublayers alike to implement common properties\n * such as id, title and attributes.\n */\nexport abstract class AbstractLayerBase<AdditionalEvents = {}>\n    extends EventEmitter<LayerBaseEvents & AdditionalEvents>\n    implements LayerBase\n{\n    #map: MapModelImpl | undefined;\n\n    #id: string;\n    #title: string;\n    #description: string;\n    #attributes: Record<string | symbol, unknown>;\n    #destroyed = false;\n\n    constructor(config: AbstractLayerBaseOptions) {\n        super();\n        this.#id = config.id ?? uuid4v();\n        this.#attributes = config.attributes ?? {};\n        this.#title = config.title;\n        this.#description = config.description ?? \"\";\n    }\n\n    protected get __destroyed(): boolean {\n        return this.#destroyed;\n    }\n\n    get map(): MapModel {\n        const map = this.#map;\n        if (!map) {\n            throw new Error(`Layer '${this.id}' has not been attached to a map yet.`);\n        }\n        return map;\n    }\n\n    get id(): string {\n        return this.#id;\n    }\n\n    get title(): string {\n        return this.#title;\n    }\n\n    get description(): string {\n        return this.#description;\n    }\n\n    get attributes(): Record<string | symbol, unknown> {\n        return this.#attributes;\n    }\n\n    abstract get visible(): boolean;\n\n    abstract get sublayers(): SublayersCollectionImpl<Sublayer & AbstractLayerBase> | undefined;\n\n    destroy() {\n        if (this.#destroyed) {\n            return;\n        }\n\n        this.#destroyed = true;\n        this.sublayers?.destroy();\n        try {\n            this.emit(\"destroy\");\n        } catch (e) {\n            LOG.warn(`Unexpected error from event listener during layer destruction:`, e);\n        }\n    }\n\n    /**\n     * Attaches the layer to its owning map.\n     */\n    protected __attachToMap(map: MapModelImpl): void {\n        if (this.#map) {\n            throw new Error(\n                `Layer '${this.id}' has already been attached to the map '${this.map.id}'`\n            );\n        }\n        this.#map = map;\n    }\n\n    setTitle(newTitle: string): void {\n        if (newTitle !== this.#title) {\n            this.#title = newTitle;\n            this.__emitChangeEvent(\"changed:title\");\n        }\n    }\n\n    setDescription(newDescription: string): void {\n        if (newDescription !== this.#description) {\n            this.#description = newDescription;\n            this.__emitChangeEvent(\"changed:description\");\n        }\n    }\n\n    updateAttributes(newAttributes: Record<string | symbol, unknown>): void {\n        const attributes = this.#attributes;\n        const keys = Reflect.ownKeys(newAttributes);\n\n        let changed = false;\n        for (const key of keys) {\n            const existing = attributes[key];\n            const value = newAttributes[key];\n            if (existing !== value) {\n                attributes[key] = value;\n                changed = true;\n            }\n        }\n\n        if (changed) {\n            this.__emitChangeEvent(\"changed:attributes\");\n        }\n    }\n\n    deleteAttribute(deleteAttribute: string | symbol): void {\n        const attributes = this.#attributes;\n        if (attributes[deleteAttribute]) {\n            delete attributes[deleteAttribute];\n            this.__emitChangeEvent(\"changed:attributes\");\n        }\n    }\n\n    abstract setVisible(newVisibility: boolean): void;\n\n    protected __emitChangeEvent<Name extends EventNames<LayerBaseEvents & AdditionalEvents>>(\n        event: Name\n    ) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (this as any).emit(event);\n        this.emit(\"changed\");\n    }\n}\n"],"names":["uuid4v"],"mappings":"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"}