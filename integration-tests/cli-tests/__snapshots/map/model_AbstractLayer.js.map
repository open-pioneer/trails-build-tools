{"version":3,"file":"AbstractLayer.js","sources":["AbstractLayer.ts"],"sourcesContent":["// SPDX-FileCopyrightText: 2023 Open Pioneer project (https://github.com/open-pioneer)\n// SPDX-License-Identifier: Apache-2.0\nimport { Resource, createLogger } from \"@open-pioneer/core\";\nimport { unByKey } from \"ol/Observable\";\nimport { EventsKey } from \"ol/events\";\nimport OlBaseLayer from \"ol/layer/Base\";\nimport OlLayer from \"ol/layer/Layer\";\nimport Source, { State as OlSourceState } from \"ol/source/Source\";\nimport { Layer, LayerLoadState, SimpleLayerConfig } from \"../api\";\nimport { AbstractLayerBase } from \"./AbstractLayerBase\";\nimport { MapModelImpl } from \"./MapModelImpl\";\n\nconst LOG = createLogger(\"map:AbstractLayer\");\n\n/**\n * Base class for normal layer types.\n *\n * These layers always have an associated OpenLayers layer.\n */\nexport abstract class AbstractLayer<AdditionalEvents = {}>\n    extends AbstractLayerBase<AdditionalEvents>\n    implements Layer\n{\n    #olLayer: OlBaseLayer;\n    #isBaseLayer: boolean;\n    #visible: boolean;\n\n    #loadState: LayerLoadState;\n    #stateWatchResource: Resource | undefined;\n\n    constructor(config: SimpleLayerConfig) {\n        super(config);\n        this.#olLayer = config.olLayer;\n        this.#isBaseLayer = config.isBaseLayer ?? false;\n        this.#visible = config.visible ?? true;\n\n        const { initial: initialState, resource: stateWatchResource } = watchLoadState(\n            this.#olLayer,\n            (state) => {\n                this.#loadState = state;\n                this.__emitChangeEvent(\"changed:loadState\");\n            }\n        );\n        this.#loadState = initialState;\n        this.#stateWatchResource = stateWatchResource;\n    }\n\n    get visible(): boolean {\n        return this.#visible;\n    }\n\n    get olLayer(): OlBaseLayer {\n        return this.#olLayer;\n    }\n\n    get isBaseLayer(): boolean {\n        return this.#isBaseLayer;\n    }\n\n    get loadState(): LayerLoadState {\n        return this.#loadState;\n    }\n\n    destroy() {\n        if (this.__destroyed) {\n            return;\n        }\n\n        this.#stateWatchResource?.destroy();\n        this.olLayer.dispose();\n        super.destroy();\n    }\n\n    /**\n     * Called by the map model when the layer is added to the map.\n     */\n    __attach(map: MapModelImpl): void {\n        super.__attachToMap(map);\n    }\n\n    setVisible(newVisibility: boolean): void {\n        if (this.isBaseLayer) {\n            LOG.warn(\n                `Cannot change visibility of base layer '${this.id}': use activateBaseLayer() on the map's LayerCollection instead.`\n            );\n            return;\n        }\n\n        this.__setVisible(newVisibility);\n    }\n\n    __setVisible(newVisibility: boolean): void {\n        let changed = false;\n        if (this.#visible !== newVisibility) {\n            this.#visible = newVisibility;\n            changed = true;\n        }\n\n        // Improvement: actual map sync?\n        if (this.#olLayer.getVisible() != this.#visible) {\n            this.#olLayer.setVisible(newVisibility);\n        }\n        changed && this.__emitChangeEvent(\"changed:visible\");\n    }\n}\n\nfunction watchLoadState(\n    olLayer: OlBaseLayer,\n    onChange: (newState: LayerLoadState) => void\n): { initial: LayerLoadState; resource: Resource } {\n    if (!(olLayer instanceof OlLayer)) {\n        // Some layers don't have a source (such as group)\n        return {\n            initial: \"loaded\",\n            resource: {\n                destroy() {\n                    void 0;\n                }\n            }\n        };\n    }\n\n    let currentSource = olLayer?.getSource() as Source | null;\n    let currentLoadState = mapState(currentSource?.getState());\n    const updateState = () => {\n        const nextLoadState = mapState(currentSource?.getState());\n        if (currentLoadState !== nextLoadState) {\n            currentLoadState = nextLoadState;\n            onChange(currentLoadState);\n        }\n    };\n\n    let stateHandle: EventsKey | undefined;\n    stateHandle = currentSource?.on(\"change\", () => {\n        updateState();\n    });\n\n    const sourceHandle = olLayer.on(\"change:source\", () => {\n        // unsubscribe from old source\n        stateHandle && unByKey(stateHandle);\n        stateHandle = undefined;\n\n        // subscribe to new source and update state\n        currentSource = olLayer?.getSource() as Source | null;\n        stateHandle = currentSource?.on(\"change\", () => {\n            updateState();\n        });\n        updateState();\n    });\n    return {\n        initial: currentLoadState,\n        resource: {\n            destroy() {\n                stateHandle && unByKey(stateHandle);\n                unByKey(sourceHandle);\n            }\n        }\n    };\n}\n\nfunction mapState(state: OlSourceState | undefined): LayerLoadState {\n    switch (state) {\n        case undefined:\n            return \"loaded\";\n        case \"undefined\":\n            return \"not-loaded\";\n        case \"loading\":\n            return \"loading\";\n        case \"ready\":\n            return \"loaded\";\n        case \"error\":\n            return \"error\";\n    }\n}\n"],"names":[],"mappings":"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"}